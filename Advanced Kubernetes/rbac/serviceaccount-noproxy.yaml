### Here are the commands to use in the container to retrieve the credentials ###

## Point to the internal API server hostname
# export APISERVER=https://kubernetes.default.svc

## Path to ServiceAccount token
# export SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount

## Read this Pod's namespace
# export NAMESPACE=$(cat ${SERVICEACCOUNT}/namespace)

## Read the ServiceAccount bearer token
# export TOKEN=$(cat ${SERVICEACCOUNT}/token)

## Reference the internal certificate authority (CA)
# export CACERT=${SERVICEACCOUNT}/ca.crt

## Explore the API with TOKEN
# curl --cacert ${CACERT} --header "Authorization: Bearer ${TOKEN}" -X GET ${APISERVER}/api/v1/namespaces/default/pods

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: readers
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: readers-rolebinding
subjects:
- kind: ServiceAccount
  name: nginx-serviceaccount
  apiGroup: ""
roleRef:
  kind: Role
  name: readers
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-serviceaccount
---
apiVersion: v1
kind: Pod
metadata:
  name: client-pod
spec:
  serviceAccountName: nginx-serviceaccount
  containers:
  - name: nginx-container
    image: nginx